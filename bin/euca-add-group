#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt, sys, os
import euca_tools

usage_string = """
DESCRIPTION
    Creates a new security group.

USAGE
    euca-add-group -d, --description group_description
	  [-h, --help] [--version] [--debug] group_name 

    Where
	group_name - unique name for the group to create.
	group_description - description of this group.
"""

version_string = """    euca-add-group version: 1.0 (BSD)"""

def usage():
    print usage_string
    euca_tools.usage()

def version():
    print version_string
    sys.exit()

def display_group(group):
    group_string = '%s\t%s' % (group.name, group.description)
    print 'GROUP\t%s' % (group_string)

def main():
    euca = None
    try:
        euca = euca_tools.EucaTool('d:', ['description='])
    except:
        usage()
 
    group_name = None
    group_description = None

    for name, value in euca.opts:
        if name in ('-d', '--description'):
            group_description = value 
        elif name in ('-h', '--help'):
            usage()
	elif name in ('--version'):
	    version()
    
    ec2_conn = euca.make_connection()
 
    for arg in euca.args:
        group_name = arg
	break
    if group_name and group_description:
	group = ec2_conn.create_security_group(name = group_name,
					       description = group_description)
	display_group(group)
    else:
    	print 'group_name and group_description must be specified'
	usage()
if __name__ == "__main__":
    main()
 
