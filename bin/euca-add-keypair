#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt, sys, os
from euca2ools import Euca2ool, ValidationError, Util 

usage_string = """
DESCRIPTION
    Creates a new key pair.

USAGE
    euca-add-keypair [-h, --help] [--version] [--debug] keypair_name

    Where
	keypair_name - unique name for a keypair to create. 
"""

version_string = """    euca-add-keypair version: 1.0 (BSD)"""

def usage():
    print usage_string
    Util().usage()

def version():
    print version_string
    sys.exit()

def display_keypair(keypair):
    keypair_string = '%s\t%s' % (keypair.name, keypair.fingerprint)
    print 'KEYPAIR\t%s' % (keypair_string)
    print keypair.material

def main():
    euca = None
    try:
        euca = Euca2ool()
    except:
        usage()
 
    debug = False
    keypair_name = None

    for name, value in euca.opts:
        if name in ('-h', '--help'):
            usage()
	elif name in ('--version'):
	    version()
    
    euca_conn = euca.make_connection()
 
    for arg in euca.args:
        keypair_name = arg
	break

    if keypair_name:
        keypair = euca_conn.create_key_pair(keypair_name)
        display_keypair(keypair)
    else:
        print 'keypair_name must be specified'
	usage()

if __name__ == "__main__":
    main()
 
