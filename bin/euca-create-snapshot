#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt, sys, os
from euca2ools import Euca2ool, ValidationError, Util

usage_string = """
DESCRIPTION
    Creates a volume in a specified availability zone.

USAGE
    euca-create-snapshot [-h, --help] [--version] [--debug] volume_id 

    Where
	volume_id - unique id for a volume to snapshot.
"""

version_string = """    euca-create-snapshot version: 1.0 (BSD)"""

def usage():
    print usage_string
    Util().usage()

def version():
    print version_string
    sys.exit()

def display_snapshot(snapshot):
    snapshot_string = '%s\t%s\t%s\t%s\t%s' % (snapshot.id, snapshot.volume_id, snapshot.status, snapshot.start_time, snapshot.progress)
    print 'SNAPSHOT\t%s' % (snapshot_string)

def main():
    euca = None
    try:
        euca = Euca2ool()
    except:
        usage()
 
    volume_id = None

    for name, value in euca.opts:
        if name in ('-h', '--help'):
            usage()
	elif name in ('--version'):
	    version()
    
    euca_conn = euca.make_connection()
 
    for arg in euca.args:
	volume_id = arg
	break
    
    if volume_id:
        try:
            euca.validate_volume_id(volume_id)
        except ValidationError as error:
   	    print error.message
            sys.exit(1)

	snapshot = euca_conn.create_snapshot(volume_id)
	display_snapshot(snapshot)
    else:
    	print 'volume_id must be specified'
	usage()
if __name__ == "__main__":
    main()
 
