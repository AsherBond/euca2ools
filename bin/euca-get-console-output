#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt, sys, os
from euca2ools import Euca2ool, InstanceValidationError, Util

usage_string = """
Prints console output from a running instance.

euca-get-console-output [-h, --help] [--version] [--debug] instance_id

REQUIRED PARAMETERS
	
instance_id			unique identifier for the instance show the console output for.

OPTIONAL PARAMETERS

"""

version_string = """    euca-get-console-output version: 1.0 (BSD)"""

def usage():
    print usage_string
    Util().usage()

def version():
    print version_string
    sys.exit()

def display_console_output(console_output):
    print console_output.instance_id
    print console_output.timestamp
    print console_output.output
 
def main():
    try:
	euca = Euca2ool()
    except Exception, e:
	print e
        usage()
 
    instance_id = None

    for name, value in euca.opts:
        if name in ('-h', '--help'):
            usage()
	elif name == '--version':
	    version()
	elif name == '--debug':
	    debug = True
    
    for arg in euca.args:
	instance_id = arg
	break


    if instance_id:
        try:
	    euca.validate_instance_id(instance_id)
        except InstanceValidationError:
   	    print 'Invalid instance id'
            sys.exit(1)

        euca_conn = euca.make_connection()
	console_output = euca_conn.get_console_output(instance_id)
	display_console_output(console_output)
    else:
    	print 'instance_id must be specified'
	usage()
if __name__ == "__main__":
    main()
 
