#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt, sys, os
from euca2ools import Euca2ool, ValidationError, Util

usage_string = """
DESCRIPTION
    Show image attributes.

USAGE
    euca-describe-image-attribute [-l, --launch-permission] [-p, --product-code] 
	  [-B, --block-device-mapping] [--kernel] [--ramdisk]
	  [-h, --help] [--version] [--debug] image_id 

    Where
	image_id - unique identifier for the image that you want to retrieve the attributes for. 
        -B, --block-device-mapping - show block device mapping.
	-l, --launch-permission - show launch permissions.
	-p, --product-code - show the product codes associated with the image
	--kernel - show the kernel id associated with the image.
	--ramdisk - show the ramdisk id associated with the image.
"""

version_string = """    euca-describe-image-attribute version: 1.0 (BSD)"""

def usage():
    print usage_string
    Util().usage()

def version():
    print version_string
    sys.exit()

 
def display_image_attribute(image_attribute):
    if image_attribute.name == 'launch_permission':
        if image_attribute.attrs.has_key('groups'):
	    for group in image_attribute.attrs['groups']:
		print 'launchPermission\t%s\tgroup\t%s' % (image_attribute.image_id, group)
	if image_attribute.attrs.has_key('user_ids'):
	    for userid in image_attribute.attrs['user_ids']:
		print 'launchPermission\t%s\tuserId\t%s' % (image_attribute.image_id, userid)
    if image_attribute.attrs.has_key('product_codes'):
	for product_code in image_attribute.attrs['product_codes']:
	    print 'productCodes\t%s\tproductCode\t%s' % (image_attribute.image_id, product_code)
    if image_attribute.kernel:
	print 'kernel\t%s\tkernel\t%s' % (image_attribute.image_id, image_attribute.kernel)
    if image_attribute.ramdisk:
	print 'ramdisk\t%s\tramdisk\t%s' % (image_attribute.image_id, image_attribute.ramdisk)

def main():
    euca = None
    try:
        euca = Euca2ool('lpB',
                                   ['block-device-mapping', 'launch-permission', 'product-code',
				    'kernel', 'ramdisk'])
    except:
        usage()
 
    image_id = None
    image_attribute = None

    for name, value in euca.opts:
	if name in ('-p', '--product-code'):
	    if not image_attribute:
	        image_attribute = 'productCodes'
	elif name in ('-l', '--launch-permission'):
	    if not image_attribute:
		image_attribute = 'launchPermission'
	elif name in ('-B', '--block-device-mapping'):
	    if not image_attribute:
		image_attribute = 'blockDeviceMapping'
	elif name in ('--kernel'):
	    if not image_attribute:
		image_attribute = 'kernel'
	elif name in ('--ramdisk'):
	    if not image_attribute:
		image_attribute = 'ramdisk'
        elif name in ('-h', '--help'):
            usage()
	elif name in ('--version'):
	    version()
    
    for arg in euca.args:
        image_id = arg
	break


    if image_id:
        euca_conn = euca.make_connection()
	image_attribute = euca_conn.get_image_attribute(image_id = image_id,
						     attribute = image_attribute)
	if image_attribute:
	    display_image_attribute(image_attribute)
    else:
    	print 'image_id must be specified'
	usage()
if __name__ == "__main__":
    main()
 
