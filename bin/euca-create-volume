#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt, sys, os
from euca_tools import EucaTool, ValidationError, Util

usage_string = """
DESCRIPTION
    Creates a volume in a specified availability zone.

USAGE
    euca-create-volume -s size | --snapshot snapshot_id -z zone
	  [-h, --help] [--version] [--debug]

    Where
	-s - size of the volume (in GiB). 
	--snapshot - create volume from a snapshot.
	-z - availability zone to create the volume in
	snapshot_id - unique id for a snapshot to create the volume from.
"""

version_string = """    euca-create-volume version: 1.0 (BSD)"""

def usage():
    print usage_string
    Util().usage()

def version():
    print version_string
    sys.exit()

def display_volume(volume):
        
    volume_string = '%s\t%d' % (volume.id, volume.size)
    if volume.snapshot_id:
	    volume_string += '\t%s' % (volume.snapshot_id)
    volume_string += '\t%s\t%s' % (volume.status, volume.create_time)
    print 'VOLUME\t%s' % (volume_string)

def main():
    euca = None
    try:
        euca = EucaTool('s:z:',
                                   ['zone=', 'snapshot='])
    except:
        usage()
 
    size = None 
    zone = None
    snapshot_id = None

    for name, value in euca.opts:
        if name in ('-s'):
            size = int(value) 
        elif name in ('-z', '--zone'):
            zone = value 
        elif name in ('--snapshot'):
            snapshot_id = value 
        elif name in ('-h', '--help'):
            usage()
	elif name in ('--version'):
	    version()

    euca_conn = euca.make_connection()
    
    if (size or snapshot_id) and zone:
        try:
	    if size:
		euca.validate_volume_size(size)
	    if snapshot_id:
	        euca.validate_snapshot_id(instance_id)
        except ValidationError as error:
   	    print error.message
            sys.exit(1)


	volume = euca_conn.create_volume(size, zone, snapshot_id)
	display_volume(volume)
    else:
    	print 'availability zone and size (or snapshot id) must be specified'
	usage()
if __name__ == "__main__":
    main()
 
