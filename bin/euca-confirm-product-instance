#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Regents of the University of California
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Sunil Soman sunils@cs.ucsb.edu

import getopt, sys, os
import euca_tool

usage_string = """
DESCRIPTION
    Confirm if instance is running with product code attached.

USAGE
    euca-confirm-product-instance -i instance_id product_code
	  [-h, --help] [--version] [--debug] 

    Where
	instance_id - Unique identifier for a running instance.
	product_code - The product code to verify.
"""

version_string = """    euca-confirm-product-instance version: 1.0 (BSD)"""

def usage():
    print usage_string
    euca_tool.usage()

def version():
    print version_string
    sys.exit()

 
def main():
    euca = None
    try:
        euca = euca_tool.EucaTool('i:',
                                   ['instance='])
    except:
        usage()
 
    instance_id = None
    product_code = None

    for name, value in euca.opts:
	if name in ('-i', '--instance'):
	    instance_id = value
        elif name in ('-h', '--help'):
            usage()
	elif name in ('--version'):
	    version()
    
    for arg in euca.args:
        product_code = arg
	break

    ec2_conn = euca.make_connection()

    if instance_id and product_code:
	(status, owner_id) = ec2_conn.confirm_product_instance(product_code = product_code,
							       instance_id = instance_id)
	product_string = '%s\t%s\t' % (product_code, instance_id)
	if status:
	    product_string += 'true'
	else:
	    product_string += 'false'
        print product_string

    else:
    	print 'instance_id and product_code MUST be specified'
	usage()
if __name__ == "__main__":
    main()
 
