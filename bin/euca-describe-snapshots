#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt, sys, os
from euca_tools import EucaTool, ValidationError, Util

usage_string = """
DESCRIPTION
    Shows information about snapshots.

USAGE
    euca-describe-snapshots [-h, --help] [--version] [--debug]
	[snapshot1 snapshot2...snapshotN] 

    Where
	snapshot1 snapshot2...snapshotN - snapshots to describe. 
"""

version_string = """    euca-describe-snapshot version: 1.0 (BSD)"""

def usage():
    print usage_string
    Util().usage()

def version():
    print version_string
    sys.exit()

def display_snapshots(snapshots, snapshot_ids):
    check_snapshot_ids = False
    if(len(snapshot_ids) > 0):
	check_snapshot_ids = True

    for snapshot in snapshots:
	if check_snapshot_ids:
	    if not snapshot.id in snapshot_ids:
	        continue
        snapshot_string = '%s\t%s\t%s\t%s\t%s' % (snapshot.id, snapshot.volume_id, snapshot.status, snapshot.start_time, snapshot.progress)
	print 'SNAPSHOT\t%s' % (snapshot_string)

def main():
    euca = None
    try:
	euca = EucaTool()
    except:
        usage()
 
    for name, value in euca.opts:
        if name in ('-h', '--help'):
            usage()
	elif name in ('--version'):
	    version()
   
    snapshot_ids = euca.process_args()
    try:
	for id in snapshot_ids:
    	    euca.validate_snapshot_id(id)
    except ValidationError as error:
        print error.message
        sys.exit(1)

    euca_conn = euca.make_connection() 
    snapshots = euca_conn.get_all_snapshots()
    display_snapshots(snapshots, snapshot_ids)
if __name__ == "__main__":
    main()
 
