#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Regents of the University of California
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Sunil Soman sunils@cs.ucsb.edu

import getopt, sys, os
import euca_tool

usage_string = """
DESCRIPTION
    Shows information about addresses.

USAGE
    euca-describe-addresses [ip1 ip2...ipN] 
	  [-h, --help] [--version] [--debug]

    Where
	ip1 ip2...ipN - addresses to describe. 
"""

version_string = """    euca-describe-addresses version: 1.0 (BSD)"""

def usage():
    print usage_string
    euca_tool.usage()

def version():
    print version_string
    sys.exit()

def display_addresses(addresses, address_ids):
    check_address_ids = False
    if(len(address_ids) > 0):
	check_address_ids = True
    for address in addresses:
	if check_address_ids:
	    if not address.public_ip in address_ids:
	        continue
        address_string = '%s\t%s' % (address.public_ip, address.instance_id)
	print 'ADDRESS\t%s' % (address_string)

def main():
    euca = None
    try:
        euca = euca_tool.EucaTool()
    except:
        usage()
 

    for name, value in euca.opts:
        if name in ('-h', '--help'):
            usage()
	if name in ('--version'):
	    version()

    ec2_conn = euca.make_connection()
    address_ids = euca.process_args()
    addresses = ec2_conn.get_all_addresses()
    display_addresses(addresses, address_ids)
if __name__ == "__main__":
    main()
 
