#!/usr/bin/env python

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt, sys, os
from euca2ools import Euca2ool, ValidationError, Util

usage_string = """
DESCRIPTION
    Shows information about machine images.

USAGE
    euca-describe-images [-a] [-o owner] [-x user] 
	  [-h, --help] [--version] [--debug] [image1 image2 ... imageN]

    Where
	image1 image2 ... imageN - images to describe.
	-a - Show all images that the user has access to.
	-o - Show only images owned by the owner specified are displayed.	
	owner - owner of the image (string).
	-x - Show only images that the specified user is permitted to launch.
        user - username (string).
"""

version_string = """    euca-describe-images version: 1.0 (BSD)"""

def usage():
    print usage_string
    Util().usage()

def version():
    print version_string
    sys.exit()

def display_images(images, image_ids):
    check_image_ids = False
    if(len(image_ids) > 0):
	check_image_ids = True
    for image in images:
        if check_image_ids:
	    if not image.id in image_ids:
	        continue
	image_string = '%s\t%s\t%s\t%s' % (image.id, image.location, image.ownerId, image.state)
	if image.is_public:
  	    image_string += '\t public'
	if image.product_codes:
	    for product_code in image.product_codes:
		image_string += '\t%s' % product_code
	if image.architecture:
  	    image_string += '\t%s' % image.architecture
	if image.type:
	    image_string += '\t%s' % image.type
	print 'IMAGE\t%s' % (image_string)

def main():
    euca = None
    try:
        euca = Euca2ool('ao:x:') 
    except:
        usage()
 
    show_all = False
    executable_by = ['self']
    owners = [] 
    defaults = True

    for name, value in euca.opts:
        if name in ('-h', '--help'):
            usage()
	elif name == '-x':
	    if defaults:
		executable_by = []
		defaults = False
	    executable_by.append(value)
	elif name == '-o':
	    if defaults:
		executable_by = []
		defaults = False
	    owners.append(value)	     
        elif name == '-a':
            executable_by = ['self', 'all']
	    owners = []
	elif name == '--version':
	    version()

    image_ids = euca.process_args()
    #This is workaround for an issue with the front end (does not return an image set when an image id is specified LP:356389)
    euca_conn = euca.make_connection()
    images = euca_conn.get_all_images(owners=owners, executable_by=executable_by)
    display_images(images, image_ids)
if __name__ == "__main__":
    main()
 
